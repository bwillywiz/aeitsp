<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $window, $http, spUtil, $rootScope, $timeout, spAriaUtil) {
	var c = this;

	c.action = function(){
		c.resultMessage = '';
		$.ajax({
			url : 'xmlhttp.do',
			data : {
				sysparm_processor : 'PwdAjaxWFRequestProcessor',
				sysparm_name : 'validatePassword',
				sysparam_process_id : c.data.procId,
				sysparam_new_password : c.new_password
			},
			headers : {
				'X-UserToken' : g_ck
			},
			success : setPassword,
			error: function(){ }
		});			
	};

	c.disableUpdate = function(){
		return !(c.current_password && c.new_password && c.confirm_password) || c.errorMessage();        
	};

	c.errorMessage = function(){
		if((c.current_password && c.new_password) && (c.current_password == c.new_password)){
			c.resultMessage = '';
			return c.data.reusedPasswordMsg;
		}
		else if((c.new_password && c.confirm_password) && (c.new_password != c.confirm_password)){
			c.resultMessage = '';
			return c.data.notMatchMsg;
		}
		else return '';
	};
	
	function setPassword(response) {
		var docElement = response.documentElement;
		var xml = docElement.outerHTML || new XMLSerializer().serializeToString(docElement);
		var success = /answer=['"]success['"]/.test(xml);	
		if(success) {
			c.data.action = 'update';
			c.data.old_password = c.current_password;
			c.data.new_password = c.new_password;			
			c.server.update().then(function() {
				c.error = false;
				if(c.data.result == 'success'){
					c.resultMessage = c.data.successMsg;
					c.changeSuccess = true;
				}
				else {
					c.error = true;
					if (c.data.result == 'incorrect old password')
						c.resultMessage = c.data.wrongPasswordMsg;
					else if (c.data.result == 'weak password') 
						c.resultMessage = c.data.complexityMsg;
					else
						c.resultMessage = c.data.result;        
				}
			});
		}
		else {
			c.error = true;
			c.resultMessage = c.data.complexityMsg;					
		}		
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-heading {
    padding: 20px 30px 7px;
}

.panel-body {
    padding: 20px 30px 10px 30px;
}

.pwd-hint p,
.pwd-hint div {
 	  margin: 0;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>change_pwd_custom</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Change Password Custom</name>
        <option_schema/>
        <public>false</public>
        <roles>snc_external,snc_internal</roles>
        <script><![CDATA[(function(data) {
	var user_id = gs.getUser().getID();
	data.procId = gs.getProperty('glide.service_portal.default_password_process', 'c6b0c20667100200a5a0f3b457415ad5');
	data.password_hint = getPasswordHint(data.procId);
	
	if (input && input.action === 'update') {
		var enc = new GlideEncrypter();
		var encypted_new_passwd = enc.encrypt(input.new_password);
		var encypted_old_passwd = enc.encrypt(input.old_password);
		var process = new SNC.PwdProcess(data.procId);
		var processSysId = process.getId();
		var trackingMgr = new SNC.PwdTrackingManager();
		var requestId = trackingMgr.createRequest(processSysId, user_id, gs.getSessionID(), 3);// 3: request type for Change Password
		trackingMgr.updateRequestActionType(requestId, 4);// 4: request action type for Change Password

		var wf = new Workflow();
		var workflowId = wf.getWorkflowFromName('Pwd Change - Master');

		var gr = wf.startFlow(workflowId, null, 'update', {
			u_request_id : requestId,
			u_user_id : user_id,
			u_new_password : encypted_new_passwd,
			u_old_password : encypted_old_passwd
		});
		gr.next();
		var ctxId = gr.getValue('sys_id');

		// check password changed or not
		var wf_gr = new GlideRecord('wf_context');
		if (wf_gr.get(ctxId)) {
			data.result = wf_gr.getValue('result');
			data.state = wf_gr.getValue('state');
		}
	}

	data.newPasswordMsg = gs.getMessage("New Password");
	data.currentPasswordMsg = gs.getMessage("Current Password");
	data.confirmPasswordMsg = gs.getMessage("Confirm Password");
	data.complexityMsg = gs.getMessage("Invalid password: " + data.password_hint);
	data.successMsg = gs.getMessage('Your password has been changed successfully!');
	data.wrongPasswordMsg = gs.getMessage('The old password you provided does not match our records.');
	data.reusedPasswordMsg = gs.getMessage('New password cannot be same as your current password.');
	data.notMatchMsg = gs.getMessage('Passwords must match.');

	function getPasswordHint(procId) {
		var credMgr = new SNC.PwdCredentialStoreManager();
		var credId = credMgr.getCredentialStoreIdByProcessId(procId);
		var credGr = new GlideRecord('pwd_cred_store');
		if (credGr.get(credId)) { 
			return credGr.pwd_rule_hint;
		}
	}
	
})(data);]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>williamsbr.local</sys_created_by>
        <sys_created_on>2019-10-18 13:34:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>2f0dc00adb6440504a1192a6db9619a1</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Change Password Custom</sys_name>
        <sys_package display_value="AE IT Service Portal" source="x_aue_ae_it_servic">d7c8b857db16f30018159c29db96193d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AE IT Service Portal">d7c8b857db16f30018159c29db96193d</sys_scope>
        <sys_update_name>sp_widget_2f0dc00adb6440504a1192a6db9619a1</sys_update_name>
        <sys_updated_by>williamsbr.local</sys_updated_by>
        <sys_updated_on>2019-10-18 13:35:36</sys_updated_on>
        <template><![CDATA[<div class="panel panel-{{::options.color}} b">
	<div class="panel-heading">
		<h4 class="panel-title">
      <i ng-if="options.glyph" class="fa fa-{{options.glyph}} m-r"></i>
			${Change My Password}
		</h4>
	</div>
	<div class="panel-body">
    <div ng-hide="c.changeSuccess">
      <label class="field-label" for="current_password">{{::data.currentPasswordMsg}}</label>
      <div class="m-b-sm">
        <input class="form-control" type="password" ng-model="c.current_password" 
               ng-required="true" id="current_password" name="current_password" />
      </div>
      <label class="field-label" for="new_password">{{::data.newPasswordMsg}}</label>
      <div class="m-b-sm">
        <input class="form-control" type="password" ng-model="c.new_password" 
               ng-required="true" id="new_password" name="new_password" />
      </div>
      <label class="field-label" for="confirm_password">{{::data.confirmPasswordMsg}}</label>
      <div class="m-b-sm">
        <input class="form-control" type="password" ng-model="c.confirm_password" 
               ng-required="true" id="confirm_password" name="confirm_password" password-match />
      </div>
    </div>
    
    <div class="m-b-sm pwd-hint" role="alert" ng-show="c.errorMessage() || c.resultMessage">
      <span class="text-danger">{{c.errorMessage()}}</span> 
      <span class="text-primary" ng-class="{'text-danger': c.error}" ng-bind-html="c.resultMessage"></span>
    </div>
    
    <div class="m-b-xl">
      <button type="submit" ng-hide="c.changeSuccess" class="btn btn-primary pull-right m-b-lg m-t-sm" 
              ng-disabled="c.disableUpdate()" id="update" name="update" 
              ng-click="c.action()">${Update}</button>
    </div>
</div>

]]></template>
    </sp_widget>
</record_update>
